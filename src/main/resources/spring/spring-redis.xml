<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean class="com.zzz.util.EncryptPlaceholderConfigurer" >
        <property name="locations">
            <list>
                <value>classpath:redis.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>


    <!--    REDIS连接池设置 clients.jedis.JedisPoolConfig  -->
    <bean id ="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--控制一个pool可控制的jedis实例-->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!--连接池中最多可空闲的maxIdle个连接 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--最大等待时间-->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!--在获取连接的时候检查有效性-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <bean id="jedisWritePool" class="com.zzz.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg index ="0" ref="jedisPoolConfig"/>
        <constructor-arg index ="1" value="${redis.hostname}"/>
        <constructor-arg index ="2" value="${redis.port}" type ="int"/>
    </bean>

        <!--创建Radis工具类，封装好Radis的连接以进行相关操作-->
    <bean id ="jedisUtil" class ="com.zzz.cache.JedisUtil" scope ="singleton">
        <property name ="jedisPool">
            <ref bean ="jedisWritePool"/>
         </property>
    </bean>
        <!--Redis的key操作-->
    <bean id ="jedisKeys" class="com.zzz.cache.JedisUtil$Keys" scope ="singleton">
        <!--<constructor-arg ref="jedisUtil"></constructor-arg>-->
    </bean>
    <bean id ="jedisStrings" class="com.zzz.cache.JedisUtil$Strings" scope ="singleton">
        <!--<constructor-arg ref="jedisUtil"></constructor-arg>-->
    </bean>
</beans>